package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"

	"github.com/hytkgami/trivia-backend/graph/model"
	"github.com/hytkgami/trivia-backend/interfaces"
)

// Answer is the resolver for the answer field.
func (r *mutationResolver) Answer(ctx context.Context, questionID string, answer string) (*model.AnswerPayload, error) {
	uid, err := interfaces.GetUserUID(ctx)
	if err != nil {
		return nil, err
	}
	a, err := r.AnswerInteractor.Create(ctx, uid, questionID, answer)
	if err != nil {
		return nil, err
	}
	return &model.AnswerPayload{
		Answer: &model.Answer{
			ID:      a.ID,
			Content: a.Content,
		},
	}, nil
}
