type Question implements Node {
  id: ID!
  title: String!
  orderNumber: Int!
  score: Int!
  # lobby: Lobby!
  answers: [Answer!]!
}

extend type Query {
  questions(lobbyId: ID!): [Question!]!
}

extend type Mutation {
  createQuestions(lobbyId: ID!, questions: [QuestionInput!]!): CreateQuestionPayload!
  publishQuestion(lobbyId: ID!, questionId: ID!): PublishQuestionPayload!
}

input QuestionInput {
  title: String!
  orderNumber: Int!
  score: Int!
}

type CreateQuestionPayload {
  questions: [Question!]!
}

type PublishQuestionPayload {
  question: Question!
}

type Time {
  unixTime: Int!
  timeStamp: String!
}

type Subscription {
  currentTime: Time!
}
